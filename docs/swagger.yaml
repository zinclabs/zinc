basePath: /
definitions:
  aggregation.HistogramBound:
    properties:
      max:
        description: maximum
        type: number
      min:
        description: minimum
        type: number
    type: object
  auth.LoginRequest:
    properties:
      _id:
        type: string
      password:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      user:
        $ref: '#/definitions/auth.LoginUser'
      validated:
        type: boolean
    type: object
  auth.LoginUser:
    properties:
      _id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  core.Index:
    type: object
  index.AnalyzeResponse:
    properties:
      tokens:
        items:
          $ref: '#/definitions/index.AnalyzeResponseToken'
        type: array
    type: object
  index.AnalyzeResponseToken:
    properties:
      end_offset:
        type: integer
      keyword:
        type: boolean
      position:
        type: integer
      start_offset:
        type: integer
      token:
        type: string
      type:
        type: string
    type: object
  index.IndexListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/core.Index'
        type: array
      page:
        $ref: '#/definitions/meta.Page'
    type: object
  meta.AggregationAutoDateHistogram:
    properties:
      buckets:
        type: integer
      field:
        type: string
      format:
        description: format key_as_string
        type: string
      keyed:
        type: boolean
      minimum_interval:
        description: minute,hour,day,week,month,quarter,year
        type: string
      time_zone:
        description: time_zone
        type: string
    type: object
  meta.AggregationDateHistogram:
    properties:
      calendar_interval:
        description: minute,hour,day,week,month,quarter,year
        type: string
      extended_bounds:
        $ref: '#/definitions/aggregation.HistogramBound'
      field:
        type: string
      fixed_interval:
        description: ms,s,m,h,d
        type: string
      format:
        description: format key_as_string
        type: string
      hard_bounds:
        $ref: '#/definitions/aggregation.HistogramBound'
      interval:
        description: ms,s,m,h,d
        type: string
      keyed:
        type: boolean
      min_doc_count:
        type: integer
      size:
        type: integer
      time_zone:
        description: time_zone
        type: string
    type: object
  meta.AggregationDateRange:
    properties:
      field:
        type: string
      format:
        description: format the `to` and `from` values to `_as_string`, and used to
          format `keyed response`
        type: string
      keyed:
        type: boolean
      ranges:
        description: refer
        items:
          $ref: '#/definitions/meta.DateRange'
        type: array
      time_zone:
        description: refer
        type: string
    type: object
  meta.AggregationHistogram:
    properties:
      extended_bounds:
        $ref: '#/definitions/aggregation.HistogramBound'
      field:
        type: string
      hard_bounds:
        $ref: '#/definitions/aggregation.HistogramBound'
      interval:
        type: number
      keyed:
        type: boolean
      min_doc_count:
        type: integer
      offset:
        type: number
      size:
        type: integer
    type: object
  meta.AggregationIPRange:
    properties:
      field:
        type: string
      keyed:
        type: boolean
      ranges:
        items:
          $ref: '#/definitions/meta.IPRange'
        type: array
    type: object
  meta.AggregationMetric:
    properties:
      field:
        type: string
      weight_field:
        description: Field name to be used for setting weight for primary field for
          weighted average aggregation
        type: string
    type: object
  meta.AggregationRange:
    properties:
      field:
        type: string
      keyed:
        type: boolean
      ranges:
        items:
          $ref: '#/definitions/meta.Range'
        type: array
    type: object
  meta.AggregationResponse:
    properties:
      buckets:
        description: slice or map
      interval:
        description: support for auto_date_histogram_aggregation
        type: string
      value: {}
    type: object
  meta.Aggregations:
    properties:
      aggs:
        additionalProperties:
          $ref: '#/definitions/meta.Aggregations'
        description: nested aggregations
        type: object
      auto_date_histogram:
        $ref: '#/definitions/meta.AggregationAutoDateHistogram'
      avg:
        $ref: '#/definitions/meta.AggregationMetric'
      cardinality:
        $ref: '#/definitions/meta.AggregationMetric'
      count:
        $ref: '#/definitions/meta.AggregationMetric'
      date_histogram:
        $ref: '#/definitions/meta.AggregationDateHistogram'
      date_range:
        $ref: '#/definitions/meta.AggregationDateRange'
      histogram:
        $ref: '#/definitions/meta.AggregationHistogram'
      ip_range:
        $ref: '#/definitions/meta.AggregationIPRange'
        description: 'TODO: not implemented'
      max:
        $ref: '#/definitions/meta.AggregationMetric'
      min:
        $ref: '#/definitions/meta.AggregationMetric'
      range:
        $ref: '#/definitions/meta.AggregationRange'
      sum:
        $ref: '#/definitions/meta.AggregationMetric'
      terms:
        $ref: '#/definitions/meta.AggregationsTerms'
      weighted_avg:
        $ref: '#/definitions/meta.AggregationMetric'
    type: object
  meta.AggregationsTerms:
    properties:
      field:
        type: string
      order:
        additionalProperties:
          type: string
        description: '{ "_count": "asc" }'
        type: object
      size:
        type: integer
    type: object
  meta.Analyzer:
    properties:
      char_filter:
        items:
          type: string
        type: array
      filter:
        description: compatibility with es, alias for TokenFilter
        items:
          type: string
        type: array
      lowercase:
        description: for type=pattern
        type: boolean
      pattern:
        description: for type=pattern
        type: string
      stopwords:
        description: for type=pattern,standard,stop
        items:
          type: string
        type: array
      token_filter:
        items:
          type: string
        type: array
      tokenizer:
        type: string
      type:
        description: options for compatible
        type: string
    type: object
  meta.BoolQueryForSDK:
    properties:
      filter:
        description: query, [query1, query2]
        items:
          $ref: '#/definitions/meta.QueryForSDK'
        type: array
      minimum_should_match:
        description: only for should
        type: number
      must:
        description: query, [query1, query2]
        items:
          $ref: '#/definitions/meta.QueryForSDK'
        type: array
      must_not:
        description: query, [query1, query2]
        items:
          $ref: '#/definitions/meta.QueryForSDK'
        type: array
      should:
        description: query, [query1, query2]
        items:
          $ref: '#/definitions/meta.QueryForSDK'
        type: array
    type: object
  meta.DateRange:
    properties:
      from:
        type: string
      to:
        type: string
    type: object
  meta.ExistsQuery:
    properties:
      field:
        type: string
    type: object
  meta.FuzzyQuery:
    properties:
      boost:
        type: number
      fuzziness:
        description: auto, 1,2,3,n
      prefix_length:
        type: number
      value:
        type: string
    type: object
  meta.HTTPResponse:
    properties:
      message:
        type: string
    type: object
  meta.HTTPResponseDocument:
    properties:
      id:
        type: string
      index:
        type: string
      message:
        type: string
    type: object
  meta.HTTPResponseError:
    properties:
      error:
        type: string
    type: object
  meta.HTTPResponseID:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  meta.HTTPResponseIndex:
    properties:
      index:
        type: string
      message:
        type: string
      storage_type:
        type: string
    type: object
  meta.HTTPResponseRecordCount:
    properties:
      message:
        type: string
      record_count:
        type: integer
    type: object
  meta.HTTPResponseTemplate:
    properties:
      message:
        type: string
      template:
        type: string
    type: object
  meta.HealthzResponse:
    properties:
      status:
        type: string
    type: object
  meta.Highlight:
    properties:
      fields:
        additionalProperties:
          $ref: '#/definitions/meta.Highlight'
        type: object
      fragment_size:
        type: integer
      number_of_fragments:
        type: integer
      post_tags:
        items:
          type: string
        type: array
      pre_tags:
        items:
          type: string
        type: array
    type: object
  meta.Hit:
    properties:
      '@timestamp':
        type: string
      _id:
        type: string
      _index:
        type: string
      _score:
        type: number
      _source: {}
      _type:
        type: string
      fields:
        additionalProperties: true
        type: object
      highlight:
        additionalProperties: true
        type: object
    type: object
  meta.Hits:
    properties:
      hits:
        items:
          $ref: '#/definitions/meta.Hit'
        type: array
      max_score:
        type: number
      total:
        $ref: '#/definitions/meta.Total'
    type: object
  meta.IPRange:
    properties:
      from:
        type: string
      to:
        type: string
    type: object
  meta.IdsQuery:
    properties:
      values:
        items:
          type: string
        type: array
    type: object
  meta.IndexAnalysis:
    properties:
      analyzer:
        additionalProperties:
          $ref: '#/definitions/meta.Analyzer'
        type: object
      char_filter:
        additionalProperties: true
        type: object
      filter:
        additionalProperties: true
        description: compatibility with es, alias for TokenFilter
        type: object
      token_filter:
        additionalProperties: true
        type: object
      tokenizer:
        additionalProperties: true
        type: object
    type: object
  meta.IndexSettings:
    properties:
      analysis:
        $ref: '#/definitions/meta.IndexAnalysis'
      number_of_replicas:
        type: integer
      number_of_shards:
        type: integer
    type: object
  meta.IndexSimple:
    properties:
      mappings:
        additionalProperties: true
        type: object
      name:
        type: string
      settings:
        $ref: '#/definitions/meta.IndexSettings'
      shard_num:
        type: integer
      storage_type:
        type: string
    type: object
  meta.IndexTemplate:
    properties:
      created_at:
        type: string
      index_patterns:
        items:
          type: string
        type: array
      priority:
        description: highest priority is chosen
        type: integer
      template:
        $ref: '#/definitions/meta.TemplateTemplate'
      updated_at:
        type: string
    type: object
  meta.Mappings:
    properties:
      properties:
        additionalProperties:
          $ref: '#/definitions/meta.Property'
        type: object
    type: object
  meta.MatchAllQuery:
    type: object
  meta.MatchBoolPrefixQuery:
    properties:
      analyzer:
        type: string
      boost:
        type: number
      query:
        type: string
    type: object
  meta.MatchNoneQuery:
    type: object
  meta.MatchPhrasePrefixQuery:
    properties:
      analyzer:
        type: string
      boost:
        type: number
      query:
        type: string
    type: object
  meta.MatchPhraseQuery:
    properties:
      analyzer:
        type: string
      boost:
        type: number
      query:
        type: string
    type: object
  meta.MatchQuery:
    properties:
      analyzer:
        type: string
      boost:
        type: number
      fuzziness:
        description: auto, 1,2,3,n
      operator:
        description: or(default), and
        type: string
      prefix_length:
        type: number
      query:
        type: string
    type: object
  meta.MultiMatchQuery:
    properties:
      analyzer:
        type: string
      boost:
        type: number
      fields:
        items:
          type: string
        type: array
      minimum_should_match:
        type: number
      operator:
        description: or(default), and
        type: string
      query:
        type: string
      type:
        description: best_fields(default), most_fields, cross_fields, phrase, phrase_prefix,
          bool_prefix
        type: string
    type: object
  meta.Page:
    properties:
      page_num:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  meta.PrefixQuery:
    properties:
      boost:
        type: number
      value:
        description: You can speed up prefix queries using the index_prefixes mapping
          parameter.
        type: string
    type: object
  meta.Property:
    properties:
      aggregatable:
        type: boolean
      analyzer:
        type: string
      fields:
        additionalProperties:
          $ref: '#/definitions/meta.Property'
        description: |-
          Fields allow the same string value to be indexed in multiple ways for different purposes,
          such as one field for search and a multi-field for sorting and aggregations,
          or the same string value analyzed by different analyzers.
          If the Fields property is defined within a sub-field, it will be ignored.

          Currently, only "text" fields support the Fields parameter.
        type: object
      format:
        description: date format yyyy-MM-dd HH:mm:ss || yyyy-MM-dd || epoch_millis
        type: string
      highlightable:
        type: boolean
      index:
        type: boolean
      search_analyzer:
        type: string
      sortable:
        type: boolean
      store:
        type: boolean
      time_zone:
        description: date format time_zone
        type: string
      type:
        description: text, keyword, date, numeric, boolean, geo_point
        type: string
    type: object
  meta.QueryForSDK:
    properties:
      bool:
        $ref: '#/definitions/meta.BoolQueryForSDK'
        description: .
      exists:
        $ref: '#/definitions/meta.ExistsQuery'
        description: .
      fuzzy:
        additionalProperties:
          $ref: '#/definitions/meta.FuzzyQuery'
        description: simple, PrefixQuery
        type: object
      ids:
        $ref: '#/definitions/meta.IdsQuery'
        description: .
      match:
        additionalProperties:
          $ref: '#/definitions/meta.MatchQuery'
        description: simple, MatchQuery
        type: object
      match_all:
        $ref: '#/definitions/meta.MatchAllQuery'
        description: just set or null
      match_bool_prefix:
        additionalProperties:
          $ref: '#/definitions/meta.MatchBoolPrefixQuery'
        description: simple, MatchBoolPrefixQuery
        type: object
      match_none:
        $ref: '#/definitions/meta.MatchNoneQuery'
        description: just set or null
      match_phrase:
        additionalProperties:
          $ref: '#/definitions/meta.MatchPhraseQuery'
        description: simple, MatchPhraseQuery
        type: object
      match_phrase_prefix:
        additionalProperties:
          $ref: '#/definitions/meta.MatchPhrasePrefixQuery'
        description: simple, MatchPhrasePrefixQuery
        type: object
      multi_match:
        $ref: '#/definitions/meta.MultiMatchQuery'
        description: .
      prefix:
        additionalProperties:
          $ref: '#/definitions/meta.PrefixQuery'
        description: .
        type: object
      query_string:
        $ref: '#/definitions/meta.QueryStringQuery'
        description: .
      range:
        additionalProperties:
          $ref: '#/definitions/meta.RangeQueryForSDK'
        description: simple, FuzzyQuery
        type: object
      regexp:
        additionalProperties:
          $ref: '#/definitions/meta.RegexpQuery'
        description: simple, FuzzyQuery
        type: object
      simple_query_string:
        $ref: '#/definitions/meta.SimpleQueryStringQuery'
        description: .
      term:
        additionalProperties:
          $ref: '#/definitions/meta.TermQueryForSDK'
        description: simple, TermQuery
        type: object
      terms:
        additionalProperties:
          $ref: '#/definitions/meta.TermsQuery'
        description: .
        type: object
      wildcard:
        additionalProperties:
          $ref: '#/definitions/meta.WildcardQuery'
        description: simple, WildcardQuery
        type: object
    type: object
  meta.QueryStringQuery:
    properties:
      analyzer:
        type: string
      boost:
        type: number
      default_field:
        type: string
      default_operator:
        description: or(default), and
        type: string
      fields:
        items:
          type: string
        type: array
      query:
        type: string
    type: object
  meta.Range:
    properties:
      from:
        type: number
      to:
        type: number
    type: object
  meta.RangeQueryForSDK:
    properties:
      boost:
        type: number
      format:
        description: Date format used to convert date values in the query.
        type: string
      gt:
        description: string, float64
        type: string
      gte:
        description: string, float64
        type: string
      lt:
        description: string, float64
        type: string
      lte:
        description: string, float64
        type: string
      time_zone:
        description: used to convert date values in the query to UTC.
        type: string
    type: object
  meta.RegexpQuery:
    properties:
      boost:
        type: number
      flags:
        type: string
      value:
        type: string
    type: object
  meta.SearchResponse:
    properties:
      _shards:
        $ref: '#/definitions/meta.Shards'
      aggregations:
        additionalProperties:
          $ref: '#/definitions/meta.AggregationResponse'
        type: object
      error:
        type: string
      hits:
        $ref: '#/definitions/meta.Hits'
      timed_out:
        type: boolean
      took:
        description: Time it took to generate the response
        type: integer
    type: object
  meta.Shards:
    properties:
      failed:
        type: integer
      skipped:
        type: integer
      successful:
        type: integer
      total:
        type: integer
    type: object
  meta.SimpleQueryStringQuery:
    properties:
      all_fields:
        type: boolean
      analyzer:
        type: string
      boost:
        type: number
      default_operator:
        description: or(default), and
        type: string
      fields:
        items:
          type: string
        type: array
      query:
        type: string
    type: object
  meta.Template:
    properties:
      index_template:
        $ref: '#/definitions/meta.IndexTemplate'
      name:
        type: string
    type: object
  meta.TemplateTemplate:
    properties:
      mappings:
        $ref: '#/definitions/meta.Mappings'
      settings:
        $ref: '#/definitions/meta.IndexSettings'
    type: object
  meta.TermQueryForSDK:
    properties:
      boost:
        type: number
      case_insensitive:
        type: boolean
      value:
        type: string
    type: object
  meta.TermsQuery:
    additionalProperties: true
    type: object
  meta.Total:
    properties:
      value:
        description: Count of documents returned
        type: integer
    type: object
  meta.User:
    properties:
      _id:
        type: string
      created_at:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      salt:
        type: string
      updated_at:
        type: string
    type: object
  meta.VersionResponse:
    properties:
      branch:
        type: string
      build:
        type: string
      build_date:
        type: string
      commit_hash:
        type: string
      version:
        type: string
    type: object
  meta.WildcardQuery:
    properties:
      boost:
        type: number
      value:
        type: string
    type: object
  meta.ZincQueryForSDK:
    properties:
      _source:
        description: true, false, ["field1", "field2.*"]
        items:
          type: string
        type: array
      aggs:
        additionalProperties:
          $ref: '#/definitions/meta.Aggregations'
        type: object
      explain:
        type: boolean
      fields:
        description: '["field1", "field2.*", {"field": "fieldName", "format": "epoch_millis"}]'
        items:
          type: string
        type: array
      from:
        type: integer
      highlight:
        $ref: '#/definitions/meta.Highlight'
      query:
        $ref: '#/definitions/meta.QueryForSDK'
      size:
        type: integer
      sort:
        description: '"_sorce", ["+Year","-Year", {"Year": "desc"}, "Date": {"order":
          "asc"", "format": "yyyy-MM-dd"}}"}]'
        items:
          type: string
        type: array
      timeout:
        type: integer
      track_total_hits:
        type: boolean
    type: object
  v1.AggregationBucket:
    properties:
      aggregations:
        additionalProperties:
          $ref: '#/definitions/v1.AggregationResponse'
        type: object
      doc_count:
        type: integer
      key:
        type: string
    type: object
  v1.AggregationDateRange:
    properties:
      from:
        type: string
      to:
        type: string
    type: object
  v1.AggregationNumberRange:
    properties:
      from:
        type: number
      to:
        type: number
    type: object
  v1.AggregationParams:
    properties:
      agg_type:
        type: string
      aggs:
        additionalProperties:
          $ref: '#/definitions/v1.AggregationParams'
        type: object
      date_ranges:
        items:
          $ref: '#/definitions/v1.AggregationDateRange'
        type: array
      field:
        type: string
      ranges:
        items:
          $ref: '#/definitions/v1.AggregationNumberRange'
        type: array
      size:
        type: integer
      weight_field:
        description: Field name to be used for setting weight for primary field for
          weighted average aggregation
        type: string
    type: object
  v1.AggregationResponse:
    properties:
      buckets:
        items:
          $ref: '#/definitions/v1.AggregationBucket'
        type: array
      value: {}
    type: object
  v1.Hit:
    properties:
      '@timestamp':
        type: string
      _id:
        type: string
      _index:
        type: string
      _score:
        type: number
      _source: {}
      _type:
        type: string
      highlight:
        additionalProperties: true
        type: object
    type: object
  v1.Hits:
    properties:
      hits:
        items:
          $ref: '#/definitions/v1.Hit'
        type: array
      max_score:
        type: number
      total:
        $ref: '#/definitions/v1.Total'
    type: object
  v1.QueryParams:
    properties:
      boost:
        type: integer
      end_time:
        type: string
      field:
        type: string
      start_time:
        type: string
      term:
        type: string
      terms:
        description: For multi phrase query
        items:
          items:
            type: string
          type: array
        type: array
    type: object
  v1.SearchResponse:
    properties:
      aggregations:
        additionalProperties:
          $ref: '#/definitions/v1.AggregationResponse'
        type: object
      error:
        type: string
      hits:
        $ref: '#/definitions/v1.Hits'
      timed_out:
        type: boolean
      took:
        description: Time it took to generate the response
        type: integer
    type: object
  v1.Total:
    properties:
      value:
        description: Count of documents returned
        type: integer
    type: object
  v1.ZincQueryForSDK:
    properties:
      _source:
        items:
          type: string
        type: array
      aggs:
        additionalProperties:
          $ref: '#/definitions/v1.AggregationParams'
        type: object
      explain:
        type: boolean
      from:
        type: integer
      highlight:
        $ref: '#/definitions/meta.Highlight'
      max_results:
        type: integer
      query:
        $ref: '#/definitions/v1.QueryParams'
      search_type:
        description: SearchType is the type of search to perform. Can be match, match_phrase,
          query_string, etc
        type: string
      sort_fields:
        items:
          type: string
        type: array
    type: object
host: localhost:4080
info:
  contact:
    name: Zinc Search
    url: https://www.zincsearch.com
  description: Zinc Search engine API documents https://docs.zincsearch.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Zinc Search engine API
  version: 1.0.0
paths:
  /api/_analyze:
    post:
      consumes:
      - application/json
      operationId: Analyze
      parameters:
      - description: Query
        in: body
        name: query
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/index.AnalyzeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Analyze
      tags:
      - Index
  /api/_bulk:
    post:
      consumes:
      - text/plain
      operationId: Bulk
      parameters:
      - description: Query
        in: body
        name: query
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseRecordCount'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Bulk documents
      tags:
      - Document
  /api/{index}/_analyze:
    post:
      consumes:
      - application/json
      operationId: AnalyzeIndex
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: Query
        in: body
        name: query
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/index.AnalyzeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Analyze
      tags:
      - Index
  /api/{index}/_doc:
    post:
      consumes:
      - application/json
      operationId: IndexDocument
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: Document
        in: body
        name: document
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Create or update document
      tags:
      - Document
  /api/{index}/_doc/{id}:
    delete:
      operationId: DeleteDocument
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseDocument'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Delete document
      tags:
      - Document
    put:
      consumes:
      - application/json
      operationId: IndexDocumentWithID
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Document
        in: body
        name: document
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Create or update document with id
      tags:
      - Document
  /api/{index}/_mapping:
    get:
      operationId: GetMapping
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Get index mappings
      tags:
      - Index
    put:
      consumes:
      - application/json
      operationId: SetMapping
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: Mapping
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/meta.Mappings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Set index mappings
      tags:
      - Index
  /api/{index}/_search:
    post:
      consumes:
      - application/json
      operationId: SearchV1
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: Query
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/v1.ZincQueryForSDK'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.SearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Search V1
      tags:
      - Search
  /api/{index}/_settings:
    get:
      operationId: GetSettings
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Get index settings
      tags:
      - Index
    put:
      consumes:
      - application/json
      operationId: SetSettings
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: Settings
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/meta.IndexSettings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Set index Settings
      tags:
      - Index
  /api/{index}/_update/{id}:
    post:
      consumes:
      - application/json
      operationId: UpdateDocument
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Document
        in: body
        name: document
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Update document with id
      tags:
      - Document
  /api/index:
    get:
      operationId: ListIndexes
      parameters:
      - description: page num
        in: query
        name: page_num
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: sort by
        in: query
        name: sort_by
        type: string
      - description: desc
        in: query
        name: desc
        type: boolean
      - description: name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/index.IndexListResponse'
      summary: List indexes
      tags:
      - Index
    post:
      consumes:
      - application/json
      operationId: CreateIndex
      parameters:
      - description: Index data
        in: body
        name: index
        required: true
        schema:
          $ref: '#/definitions/meta.IndexSimple'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseIndex'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Create index
      tags:
      - Index
  /api/index/{index}:
    delete:
      operationId: DeleteIndex
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseIndex'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Delete index
      tags:
      - Index
  /api/index/{index}/refresh:
    post:
      operationId: Refresh
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Resfresh index
      tags:
      - Index
  /api/index_name:
    get:
      operationId: IndexNameList
      parameters:
      - description: IndexName
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: List index Name
      tags:
      - Index
  /api/login:
    post:
      consumes:
      - application/json
      operationId: Login
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Login
      tags:
      - User
  /api/user:
    get:
      operationId: ListUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/meta.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: List user
      tags:
      - User
    post:
      consumes:
      - application/json
      operationId: CreateUser
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/meta.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Create user
      tags:
      - User
    put:
      consumes:
      - application/json
      operationId: UpdateUser
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/meta.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseID'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Update user
      tags:
      - User
  /api/user/{id}:
    delete:
      operationId: DeleteUser
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseID'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Delete user
      tags:
      - User
  /es/:target:
    head:
      parameters:
      - description: Index data
        in: body
        name: index
        required: true
        schema:
          $ref: '#/definitions/meta.IndexSimple'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
      summary: Checks if the index exists for compatible ES
      tags:
      - Index
    put:
      parameters:
      - description: Index data
        in: body
        name: index
        required: true
        schema:
          $ref: '#/definitions/meta.IndexSimple'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
      summary: Create index for compatible ES
      tags:
      - Index
  /es/:target/_mapping:
    get:
      parameters:
      - description: Index
        in: path
        name: target
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
      summary: Get index mappings for compatible ES
      tags:
      - Index
  /es/_bulk:
    post:
      consumes:
      - text/plain
      operationId: ESBulk
      parameters:
      - description: Query
        in: body
        name: query
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: ES bulk documents
      tags:
      - Document
  /es/_index_template:
    get:
      operationId: ListTemplates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/meta.Template'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: List index teplates
      tags:
      - Index
    post:
      consumes:
      - application/json
      operationId: CreateTemplate
      parameters:
      - description: Template data
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/meta.IndexTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Create update index template
      tags:
      - Index
  /es/_index_template/{name}:
    delete:
      operationId: DeleteTemplate
      parameters:
      - description: Template
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Delete template
      tags:
      - Index
    get:
      operationId: GetTemplate
      parameters:
      - description: Template
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.IndexTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Get index template
      tags:
      - Index
    put:
      consumes:
      - application/json
      operationId: UpdateTemplate
      parameters:
      - description: Template
        in: path
        name: name
        required: true
        type: string
      - description: Template data
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/meta.IndexTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HTTPResponseTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Create update index template
      tags:
      - Index
  /es/_msearch:
    post:
      consumes:
      - text/plain
      operationId: MSearch
      parameters:
      - description: Query
        in: body
        name: query
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.SearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Search V2 MultipleSearch for compatible ES
      tags:
      - Search
  /es/{index}/_search:
    post:
      consumes:
      - application/json
      operationId: Search
      parameters:
      - description: Index
        in: path
        name: index
        required: true
        type: string
      - description: Query
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/meta.ZincQueryForSDK'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.SearchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/meta.HTTPResponseError'
      summary: Search V2 DSL for compatible ES
      tags:
      - Search
  /healthz:
    get:
      operationId: Healthz
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.HealthzResponse'
      summary: Get healthz
  /version:
    get:
      operationId: Version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meta.VersionResponse'
      summary: Get version
schemes:
- http
- https
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
