// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Zinc Search",
            "url": "https://www.zincsearch.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/_analyze": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Analyze",
                "operationId": "Analyze",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/index.AnalyzeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/_bulk": {
            "post": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Bulk documents",
                "operationId": "Bulk",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseRecordCount"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/index": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "List indexes",
                "operationId": "ListIndexes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page num",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "desc",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/index.IndexListResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Create index",
                "operationId": "CreateIndex",
                "parameters": [
                    {
                        "description": "Index data",
                        "name": "index",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.IndexSimple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseIndex"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/index/{index}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Delete index",
                "operationId": "DeleteIndex",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseIndex"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/index/{index}/refresh": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Resfresh index",
                "operationId": "Refresh",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/index_name": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "List index Name",
                "operationId": "IndexNameList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IndexName",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "operationId": "Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List user",
                "operationId": "ListUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/meta.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create user",
                "operationId": "CreateUser",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseID"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_analyze": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Analyze",
                "operationId": "AnalyzeIndex",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/index.AnalyzeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_doc": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Create or update document",
                "operationId": "IndexDocument",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_doc/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Create or update document with id",
                "operationId": "IndexDocumentWithID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Delete document",
                "operationId": "DeleteDocument",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseDocument"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_mapping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Get index mappings",
                "operationId": "GetMapping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Set index mappings",
                "operationId": "SetMapping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mapping",
                        "name": "mapping",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.Mappings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search V1",
                "operationId": "SearchV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ZincQueryForSDK"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_settings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Get index settings",
                "operationId": "GetSettings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Set index Settings",
                "operationId": "SetSettings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.IndexSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/api/{index}/_update/{id}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "Update document with id",
                "operationId": "UpdateDocument",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Document",
                        "name": "document",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/es/:target": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Create index for compatible ES",
                "parameters": [
                    {
                        "description": "Index data",
                        "name": "index",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.IndexSimple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    }
                }
            },
            "head": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Checks if the index exists for compatible ES",
                "parameters": [
                    {
                        "description": "Index data",
                        "name": "index",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.IndexSimple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/es/:target/_mapping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Get index mappings for compatible ES",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "target",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/es/_bulk": {
            "post": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document"
                ],
                "summary": "ES bulk documents",
                "operationId": "ESBulk",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/es/_index_template": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "List index teplates",
                "operationId": "ListTemplates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/meta.Template"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Create update index template",
                "operationId": "CreateTemplate",
                "parameters": [
                    {
                        "description": "Template data",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.IndexTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseTemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/es/_index_template/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Get index template",
                "operationId": "GetTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.IndexTemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Create update index template",
                "operationId": "UpdateTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Template data",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.IndexTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseTemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Index"
                ],
                "summary": "Delete template",
                "operationId": "DeleteTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/es/_msearch": {
            "post": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search V2 MultipleSearch for compatible ES",
                "operationId": "MSearch",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/es/{index}/_search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search V2 DSL for compatible ES",
                "operationId": "Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meta.ZincQueryForSDK"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/meta.HTTPResponseError"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get healthz",
                "operationId": "Healthz",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.HealthzResponse"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get version",
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/meta.VersionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aggregation.HistogramBound": {
            "type": "object",
            "properties": {
                "max": {
                    "description": "maximum",
                    "type": "number"
                },
                "min": {
                    "description": "minimum",
                    "type": "number"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/auth.LoginUser"
                },
                "validated": {
                    "type": "boolean"
                }
            }
        },
        "auth.LoginUser": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "core.Index": {
            "type": "object"
        },
        "index.AnalyzeResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/index.AnalyzeResponseToken"
                    }
                }
            }
        },
        "index.AnalyzeResponseToken": {
            "type": "object",
            "properties": {
                "end_offset": {
                    "type": "integer"
                },
                "keyword": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                },
                "start_offset": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "index.IndexListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Index"
                    }
                },
                "page": {
                    "$ref": "#/definitions/meta.Page"
                }
            }
        },
        "meta.AggregationAutoDateHistogram": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "integer"
                },
                "field": {
                    "type": "string"
                },
                "format": {
                    "description": "format key_as_string",
                    "type": "string"
                },
                "keyed": {
                    "type": "boolean"
                },
                "minimum_interval": {
                    "description": "minute,hour,day,week,month,quarter,year",
                    "type": "string"
                },
                "time_zone": {
                    "description": "time_zone",
                    "type": "string"
                }
            }
        },
        "meta.AggregationDateHistogram": {
            "type": "object",
            "properties": {
                "calendar_interval": {
                    "description": "minute,hour,day,week,month,quarter,year",
                    "type": "string"
                },
                "extended_bounds": {
                    "$ref": "#/definitions/aggregation.HistogramBound"
                },
                "field": {
                    "type": "string"
                },
                "fixed_interval": {
                    "description": "ms,s,m,h,d",
                    "type": "string"
                },
                "format": {
                    "description": "format key_as_string",
                    "type": "string"
                },
                "hard_bounds": {
                    "$ref": "#/definitions/aggregation.HistogramBound"
                },
                "interval": {
                    "description": "ms,s,m,h,d",
                    "type": "string"
                },
                "keyed": {
                    "type": "boolean"
                },
                "min_doc_count": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "time_zone": {
                    "description": "time_zone",
                    "type": "string"
                }
            }
        },
        "meta.AggregationDateRange": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "format": {
                    "description": "format the ` + "`" + `to` + "`" + ` and ` + "`" + `from` + "`" + ` values to ` + "`" + `_as_string` + "`" + `, and used to format ` + "`" + `keyed response` + "`" + `",
                    "type": "string"
                },
                "keyed": {
                    "type": "boolean"
                },
                "ranges": {
                    "description": "refer",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.DateRange"
                    }
                },
                "time_zone": {
                    "description": "refer",
                    "type": "string"
                }
            }
        },
        "meta.AggregationHistogram": {
            "type": "object",
            "properties": {
                "extended_bounds": {
                    "$ref": "#/definitions/aggregation.HistogramBound"
                },
                "field": {
                    "type": "string"
                },
                "hard_bounds": {
                    "$ref": "#/definitions/aggregation.HistogramBound"
                },
                "interval": {
                    "type": "number"
                },
                "keyed": {
                    "type": "boolean"
                },
                "min_doc_count": {
                    "type": "integer"
                },
                "offset": {
                    "type": "number"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "meta.AggregationIPRange": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "keyed": {
                    "type": "boolean"
                },
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.IPRange"
                    }
                }
            }
        },
        "meta.AggregationMetric": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "weight_field": {
                    "description": "Field name to be used for setting weight for primary field for weighted average aggregation",
                    "type": "string"
                }
            }
        },
        "meta.AggregationRange": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "keyed": {
                    "type": "boolean"
                },
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.Range"
                    }
                }
            }
        },
        "meta.AggregationResponse": {
            "type": "object",
            "properties": {
                "buckets": {
                    "description": "slice or map"
                },
                "interval": {
                    "description": "support for auto_date_histogram_aggregation",
                    "type": "string"
                },
                "value": {}
            }
        },
        "meta.Aggregations": {
            "type": "object",
            "properties": {
                "aggs": {
                    "description": "nested aggregations",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.Aggregations"
                    }
                },
                "auto_date_histogram": {
                    "$ref": "#/definitions/meta.AggregationAutoDateHistogram"
                },
                "avg": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                },
                "cardinality": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                },
                "count": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                },
                "date_histogram": {
                    "$ref": "#/definitions/meta.AggregationDateHistogram"
                },
                "date_range": {
                    "$ref": "#/definitions/meta.AggregationDateRange"
                },
                "histogram": {
                    "$ref": "#/definitions/meta.AggregationHistogram"
                },
                "ip_range": {
                    "description": "TODO: not implemented",
                    "$ref": "#/definitions/meta.AggregationIPRange"
                },
                "max": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                },
                "min": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                },
                "range": {
                    "$ref": "#/definitions/meta.AggregationRange"
                },
                "sum": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                },
                "terms": {
                    "$ref": "#/definitions/meta.AggregationsTerms"
                },
                "weighted_avg": {
                    "$ref": "#/definitions/meta.AggregationMetric"
                }
            }
        },
        "meta.AggregationsTerms": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "description": "{ \"_count\": \"asc\" }",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "meta.Analyzer": {
            "type": "object",
            "properties": {
                "char_filter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "description": "compatibility with es, alias for TokenFilter",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lowercase": {
                    "description": "for type=pattern",
                    "type": "boolean"
                },
                "pattern": {
                    "description": "for type=pattern",
                    "type": "string"
                },
                "stopwords": {
                    "description": "for type=pattern,standard,stop",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token_filter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenizer": {
                    "type": "string"
                },
                "type": {
                    "description": "options for compatible",
                    "type": "string"
                }
            }
        },
        "meta.BoolQueryForSDK": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "query, [query1, query2]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.QueryForSDK"
                    }
                },
                "minimum_should_match": {
                    "description": "only for should",
                    "type": "number"
                },
                "must": {
                    "description": "query, [query1, query2]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.QueryForSDK"
                    }
                },
                "must_not": {
                    "description": "query, [query1, query2]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.QueryForSDK"
                    }
                },
                "should": {
                    "description": "query, [query1, query2]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.QueryForSDK"
                    }
                }
            }
        },
        "meta.DateRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "meta.ExistsQuery": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                }
            }
        },
        "meta.FuzzyQuery": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "number"
                },
                "fuzziness": {
                    "description": "auto, 1,2,3,n"
                },
                "prefix_length": {
                    "type": "number"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "meta.HTTPResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "meta.HTTPResponseDocument": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "meta.HTTPResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "meta.HTTPResponseID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "meta.HTTPResponseIndex": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "storage_type": {
                    "type": "string"
                }
            }
        },
        "meta.HTTPResponseRecordCount": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "record_count": {
                    "type": "integer"
                }
            }
        },
        "meta.HTTPResponseTemplate": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "meta.HealthzResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "meta.Highlight": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.Highlight"
                    }
                },
                "fragment_size": {
                    "type": "integer"
                },
                "number_of_fragments": {
                    "type": "integer"
                },
                "post_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pre_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "meta.Hit": {
            "type": "object",
            "properties": {
                "@timestamp": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_index": {
                    "type": "string"
                },
                "_score": {
                    "type": "number"
                },
                "_source": {},
                "_type": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "highlight": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "meta.Hits": {
            "type": "object",
            "properties": {
                "hits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/meta.Hit"
                    }
                },
                "max_score": {
                    "type": "number"
                },
                "total": {
                    "$ref": "#/definitions/meta.Total"
                }
            }
        },
        "meta.IPRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "meta.IdsQuery": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "meta.IndexAnalysis": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.Analyzer"
                    }
                },
                "char_filter": {
                    "type": "object",
                    "additionalProperties": true
                },
                "filter": {
                    "description": "compatibility with es, alias for TokenFilter",
                    "type": "object",
                    "additionalProperties": true
                },
                "token_filter": {
                    "type": "object",
                    "additionalProperties": true
                },
                "tokenizer": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "meta.IndexSettings": {
            "type": "object",
            "properties": {
                "analysis": {
                    "$ref": "#/definitions/meta.IndexAnalysis"
                },
                "number_of_replicas": {
                    "type": "integer"
                },
                "number_of_shards": {
                    "type": "integer"
                }
            }
        },
        "meta.IndexSimple": {
            "type": "object",
            "properties": {
                "mappings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/meta.IndexSettings"
                },
                "shard_num": {
                    "type": "integer"
                },
                "storage_type": {
                    "type": "string"
                }
            }
        },
        "meta.IndexTemplate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "index_patterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority": {
                    "description": "highest priority is chosen",
                    "type": "integer"
                },
                "template": {
                    "$ref": "#/definitions/meta.TemplateTemplate"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "meta.Mappings": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.Property"
                    }
                }
            }
        },
        "meta.MatchAllQuery": {
            "type": "object"
        },
        "meta.MatchBoolPrefixQuery": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "meta.MatchNoneQuery": {
            "type": "object"
        },
        "meta.MatchPhrasePrefixQuery": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "meta.MatchPhraseQuery": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "meta.MatchQuery": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "fuzziness": {
                    "description": "auto, 1,2,3,n"
                },
                "operator": {
                    "description": "or(default), and",
                    "type": "string"
                },
                "prefix_length": {
                    "type": "number"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "meta.MultiMatchQuery": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "minimum_should_match": {
                    "type": "number"
                },
                "operator": {
                    "description": "or(default), and",
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "type": {
                    "description": "best_fields(default), most_fields, cross_fields, phrase, phrase_prefix, bool_prefix",
                    "type": "string"
                }
            }
        },
        "meta.Page": {
            "type": "object",
            "properties": {
                "page_num": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "meta.PrefixQuery": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "number"
                },
                "value": {
                    "description": "You can speed up prefix queries using the index_prefixes mapping parameter.",
                    "type": "string"
                }
            }
        },
        "meta.Property": {
            "type": "object",
            "properties": {
                "aggregatable": {
                    "type": "boolean"
                },
                "analyzer": {
                    "type": "string"
                },
                "fields": {
                    "description": "Fields allow the same string value to be indexed in multiple ways for different purposes,\nsuch as one field for search and a multi-field for sorting and aggregations,\nor the same string value analyzed by different analyzers.\nIf the Fields property is defined within a sub-field, it will be ignored.\n\nCurrently, only \"text\" fields support the Fields parameter.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.Property"
                    }
                },
                "format": {
                    "description": "date format yyyy-MM-dd HH:mm:ss || yyyy-MM-dd || epoch_millis",
                    "type": "string"
                },
                "highlightable": {
                    "type": "boolean"
                },
                "index": {
                    "type": "boolean"
                },
                "search_analyzer": {
                    "type": "string"
                },
                "sortable": {
                    "type": "boolean"
                },
                "store": {
                    "type": "boolean"
                },
                "time_zone": {
                    "description": "date format time_zone",
                    "type": "string"
                },
                "type": {
                    "description": "text, keyword, date, numeric, boolean, geo_point",
                    "type": "string"
                }
            }
        },
        "meta.QueryForSDK": {
            "type": "object",
            "properties": {
                "bool": {
                    "description": ".",
                    "$ref": "#/definitions/meta.BoolQueryForSDK"
                },
                "exists": {
                    "description": ".",
                    "$ref": "#/definitions/meta.ExistsQuery"
                },
                "fuzzy": {
                    "description": "simple, PrefixQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.FuzzyQuery"
                    }
                },
                "ids": {
                    "description": ".",
                    "$ref": "#/definitions/meta.IdsQuery"
                },
                "match": {
                    "description": "simple, MatchQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.MatchQuery"
                    }
                },
                "match_all": {
                    "description": "just set or null",
                    "$ref": "#/definitions/meta.MatchAllQuery"
                },
                "match_bool_prefix": {
                    "description": "simple, MatchBoolPrefixQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.MatchBoolPrefixQuery"
                    }
                },
                "match_none": {
                    "description": "just set or null",
                    "$ref": "#/definitions/meta.MatchNoneQuery"
                },
                "match_phrase": {
                    "description": "simple, MatchPhraseQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.MatchPhraseQuery"
                    }
                },
                "match_phrase_prefix": {
                    "description": "simple, MatchPhrasePrefixQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.MatchPhrasePrefixQuery"
                    }
                },
                "multi_match": {
                    "description": ".",
                    "$ref": "#/definitions/meta.MultiMatchQuery"
                },
                "prefix": {
                    "description": ".",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.PrefixQuery"
                    }
                },
                "query_string": {
                    "description": ".",
                    "$ref": "#/definitions/meta.QueryStringQuery"
                },
                "range": {
                    "description": "simple, FuzzyQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.RangeQueryForSDK"
                    }
                },
                "regexp": {
                    "description": "simple, FuzzyQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.RegexpQuery"
                    }
                },
                "simple_query_string": {
                    "description": ".",
                    "$ref": "#/definitions/meta.SimpleQueryStringQuery"
                },
                "term": {
                    "description": "simple, TermQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.TermQueryForSDK"
                    }
                },
                "terms": {
                    "description": ".",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.TermsQuery"
                    }
                },
                "wildcard": {
                    "description": "simple, WildcardQuery",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.WildcardQuery"
                    }
                }
            }
        },
        "meta.QueryStringQuery": {
            "type": "object",
            "properties": {
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "default_field": {
                    "type": "string"
                },
                "default_operator": {
                    "description": "or(default), and",
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "meta.Range": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "number"
                },
                "to": {
                    "type": "number"
                }
            }
        },
        "meta.RangeQueryForSDK": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "number"
                },
                "format": {
                    "description": "Date format used to convert date values in the query.",
                    "type": "string"
                },
                "gt": {
                    "description": "string, float64",
                    "type": "string"
                },
                "gte": {
                    "description": "string, float64",
                    "type": "string"
                },
                "lt": {
                    "description": "string, float64",
                    "type": "string"
                },
                "lte": {
                    "description": "string, float64",
                    "type": "string"
                },
                "time_zone": {
                    "description": "used to convert date values in the query to UTC.",
                    "type": "string"
                }
            }
        },
        "meta.RegexpQuery": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "number"
                },
                "flags": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "meta.SearchResponse": {
            "type": "object",
            "properties": {
                "_shards": {
                    "$ref": "#/definitions/meta.Shards"
                },
                "aggregations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.AggregationResponse"
                    }
                },
                "error": {
                    "type": "string"
                },
                "hits": {
                    "$ref": "#/definitions/meta.Hits"
                },
                "timed_out": {
                    "type": "boolean"
                },
                "took": {
                    "description": "Time it took to generate the response",
                    "type": "integer"
                }
            }
        },
        "meta.Shards": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "skipped": {
                    "type": "integer"
                },
                "successful": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "meta.SimpleQueryStringQuery": {
            "type": "object",
            "properties": {
                "all_fields": {
                    "type": "boolean"
                },
                "analyzer": {
                    "type": "string"
                },
                "boost": {
                    "type": "number"
                },
                "default_operator": {
                    "description": "or(default), and",
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "meta.Template": {
            "type": "object",
            "properties": {
                "index_template": {
                    "$ref": "#/definitions/meta.IndexTemplate"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "meta.TemplateTemplate": {
            "type": "object",
            "properties": {
                "mappings": {
                    "$ref": "#/definitions/meta.Mappings"
                },
                "settings": {
                    "$ref": "#/definitions/meta.IndexSettings"
                }
            }
        },
        "meta.TermQueryForSDK": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "number"
                },
                "case_insensitive": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "meta.TermsQuery": {
            "type": "object",
            "additionalProperties": true
        },
        "meta.Total": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "Count of documents returned",
                    "type": "integer"
                }
            }
        },
        "meta.User": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "salt": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "meta.VersionResponse": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "build": {
                    "type": "string"
                },
                "build_date": {
                    "type": "string"
                },
                "commit_hash": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "meta.WildcardQuery": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "number"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "meta.ZincQueryForSDK": {
            "type": "object",
            "properties": {
                "_source": {
                    "description": "true, false, [\"field1\", \"field2.*\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "aggs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/meta.Aggregations"
                    }
                },
                "explain": {
                    "type": "boolean"
                },
                "fields": {
                    "description": "[\"field1\", \"field2.*\", {\"field\": \"fieldName\", \"format\": \"epoch_millis\"}]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "from": {
                    "type": "integer"
                },
                "highlight": {
                    "$ref": "#/definitions/meta.Highlight"
                },
                "query": {
                    "$ref": "#/definitions/meta.QueryForSDK"
                },
                "size": {
                    "type": "integer"
                },
                "sort": {
                    "description": "\"_sorce\", [\"+Year\",\"-Year\", {\"Year\": \"desc\"}, \"Date\": {\"order\": \"asc\"\", \"format\": \"yyyy-MM-dd\"}}\"}]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeout": {
                    "type": "integer"
                },
                "track_total_hits": {
                    "type": "boolean"
                }
            }
        },
        "v1.AggregationBucket": {
            "type": "object",
            "properties": {
                "aggregations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1.AggregationResponse"
                    }
                },
                "doc_count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "v1.AggregationDateRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "v1.AggregationNumberRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "number"
                },
                "to": {
                    "type": "number"
                }
            }
        },
        "v1.AggregationParams": {
            "type": "object",
            "properties": {
                "agg_type": {
                    "type": "string"
                },
                "aggs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1.AggregationParams"
                    }
                },
                "date_ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AggregationDateRange"
                    }
                },
                "field": {
                    "type": "string"
                },
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AggregationNumberRange"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "weight_field": {
                    "description": "Field name to be used for setting weight for primary field for weighted average aggregation",
                    "type": "string"
                }
            }
        },
        "v1.AggregationResponse": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AggregationBucket"
                    }
                },
                "value": {}
            }
        },
        "v1.Hit": {
            "type": "object",
            "properties": {
                "@timestamp": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                },
                "_index": {
                    "type": "string"
                },
                "_score": {
                    "type": "number"
                },
                "_source": {},
                "_type": {
                    "type": "string"
                },
                "highlight": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "v1.Hits": {
            "type": "object",
            "properties": {
                "hits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Hit"
                    }
                },
                "max_score": {
                    "type": "number"
                },
                "total": {
                    "$ref": "#/definitions/v1.Total"
                }
            }
        },
        "v1.QueryParams": {
            "type": "object",
            "properties": {
                "boost": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "term": {
                    "type": "string"
                },
                "terms": {
                    "description": "For multi phrase query",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "v1.SearchResponse": {
            "type": "object",
            "properties": {
                "aggregations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1.AggregationResponse"
                    }
                },
                "error": {
                    "type": "string"
                },
                "hits": {
                    "$ref": "#/definitions/v1.Hits"
                },
                "timed_out": {
                    "type": "boolean"
                },
                "took": {
                    "description": "Time it took to generate the response",
                    "type": "integer"
                }
            }
        },
        "v1.Total": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "Count of documents returned",
                    "type": "integer"
                }
            }
        },
        "v1.ZincQueryForSDK": {
            "type": "object",
            "properties": {
                "_source": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "aggs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1.AggregationParams"
                    }
                },
                "explain": {
                    "type": "boolean"
                },
                "from": {
                    "type": "integer"
                },
                "highlight": {
                    "$ref": "#/definitions/meta.Highlight"
                },
                "max_results": {
                    "type": "integer"
                },
                "query": {
                    "$ref": "#/definitions/v1.QueryParams"
                },
                "search_type": {
                    "description": "SearchType is the type of search to perform. Can be match, match_phrase, query_string, etc",
                    "type": "string"
                },
                "sort_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:4080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Zinc Search engine API",
	Description:      "Zinc Search engine API documents https://docs.zincsearch.com",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
